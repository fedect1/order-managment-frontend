generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model t_av_article {
  ARTICLE_ARTICLE Int     @id @default(autoincrement()) @db.UnsignedInt
  ARTICLE_AVID    String? @db.VarChar(20)
  ARTICLE_SYSTEM  Int     @db.UnsignedInt
  ARTICLE_CODE    Int     @db.UnsignedInt
  ARTICLE_VALUE   Float?  @db.Float
}

model t_av_data {
  DATA_ORDER Int    @db.UnsignedInt
  DATA_CODE  Int    @db.UnsignedInt
  DATA_VALUE Float? @db.Float

  @@unique([DATA_ORDER, DATA_CODE], map: "DATA_INDEX")
}

model t_av_order {
  ORDER_ORDER    Int       @id @default(autoincrement()) @db.UnsignedInt
  ORDER_AVID     String?   @db.VarChar(20)
  ORDER_POSITION Int?      @default(0) @db.UnsignedTinyInt
  ORDER_ARTICLE  String?   @db.VarChar(20)
  ORDER_RECIPE   String?   @db.VarChar(20)
  ORDER_SYSTEM   Int       @db.UnsignedInt
  ORDER_EXTRUDER String?   @db.VarChar(10)
  ORDER_DATETIME DateTime? @db.DateTime(0)
  ORDER_STATUS   Int       @db.TinyInt
}

model t_av_recipe {
  RECIPE_RECIPE          Int      @id @default(autoincrement()) @db.UnsignedInt
  RECIPE_UUID            String   @db.VarChar(36)
  RECIPE_DELETE          Boolean  @default(false)
  RECIPE_REZPNR_UNI      String?  @db.VarChar(20)
  RECIPE_SCHICHT         String?  @db.VarChar(4)
  RECIPE_SCHICHT_ANTEIL  Decimal? @db.Decimal(6, 2)
  RECIPE_REZPNR_MAT      String?  @db.VarChar(20)
  RECIPE_COMPONENT       Int?     @default(0) @db.UnsignedTinyInt
  RECIPE_MATERIAL        String?  @db.VarChar(25)
  RECIPE_MATERIAL_ID     String?  @db.VarChar(10)
  RECIPE_DICHTE          Decimal? @db.Decimal(6, 3)
  RECIPE_MATERIAL_ANTEIL Decimal? @db.Decimal(6, 2)
  RECIPE_ROHSTOFF        String?  @db.Text
}

model t_charge {
  CHARGE_CHARGE Int    @id
  CHARGE_SHORT  String @unique(map: "IDX_CHARGE_SHORT") @db.VarChar(20)
}

model t_line {
  LINE_LINE     Int    @id @default(autoincrement()) @db.MediumInt
  LINE_ID       Int    @unique(map: "IDX_ID_LINE") @db.MediumInt
  LINE_NAME     String @db.VarChar(30)
  LINE_SHORT    String @default("Mxx") @db.VarChar(10)
  LINE_TYPE     Int    @default(0) @db.MediumInt
  LINE_STANDORT Int    @default(0) @db.MediumInt
  LINE_GROUP    Int    @default(0) @db.MediumInt
  LINE_NEXT     Int    @default(1) @db.MediumInt
  LINE_NDOS     Int    @default(0) @db.MediumInt
  LINE_COLOUR   BigInt @default(0)
  LINE_MINTPT   Float  @default(50)
  LINE_MAXTPT   Float  @default(150)
  LINE_MAXABV   Float  @default(100)
  LINE_MINWID   Float  @default(800)
  LINE_MAXWID   Float  @default(1800)

  @@index([LINE_GROUP], map: "IDX_LINE_GROUP")
}

model t_rawcharge {
  RAWCHARGE_RAWCHARGE Int      @id @default(autoincrement()) @db.UnsignedInt
  RAWCHARGE_RAWMAT    Int      @db.UnsignedInt
  RAWCHARGE_RAWITEM   Int      @default(0) @db.UnsignedInt
  RAWCHARGE_DELIVERER Int?     @db.UnsignedInt
  RAWCHARGE_CHARGENR  String?  @db.VarChar(20)
  RAWCHARGE_REMARK    String?  @db.VarChar(50)
  RAWCHARGE_DATIM     DateTime @db.DateTime(0)
  RAWCHARGE_AMOUNT    Float    @db.Float
  RAWCHARGE_ACTAMOUNT Float    @db.Float
  RAWCHARGE_ATTRIBUTE Int      @db.UnsignedTinyInt
  RAWCHARGE_STATE     Int      @db.UnsignedTinyInt
  RAWCHARGE_PARENT    Int      @default(0) @db.UnsignedInt
  silos               t_silo[]
  bulk                t_bulk[]
}

model t_rawitem {
  RAWITEM_RAWITEM  Int     @id @default(autoincrement()) @db.UnsignedInt
  RAWITEM_RAWMAT   Int     @db.UnsignedInt
  RAWITEM_PRODUCER Int     @default(0) @db.UnsignedInt
  RAWITEM_ARTN     String? @db.VarChar(45)
  RAWITEM_SHORT    String? @db.VarChar(20)
  RAWITEM_PRICE    Float?  @db.Float

  @@unique([RAWITEM_RAWMAT, RAWITEM_PRODUCER, RAWITEM_SHORT], map: "IDX_RAWITEM")
}

model t_rawmat {
  RAWMAT_RAWMAT   Int      @id @default(autoincrement()) @db.UnsignedInt
  RAWMAT_NAME     String   @default("-") @db.VarChar(45)
  RAWMAT_SHORT    String?  @unique(map: "IDX_RAWMAT_SHORT") @default("-") @db.VarChar(20)
  RAWMAT_RAWTYP   Int?     @default(0) @db.UnsignedInt
  RAWMAT_PRODUCER Int?     @default(0) @db.UnsignedInt
  RAWMAT_DENSITY  Float    @default(0)
  RAWMAT_BULKDENS Float    @default(0)
  RAWMAT_MFIVAL   Float    @default(0)
  RAWMAT_COLOR    BigInt   @default(0) @db.UnsignedBigInt
  RAWMAT_VIPIDX   Int?     @db.UnsignedInt
  RAWMAT_ARTN     String?  @db.VarChar(45)
  RAWMAT_NOVIP    Boolean? @default(false)
  RAWMAT_DELETED  Boolean  @default(false)

  @@index([RAWMAT_PRODUCER], map: "IDX_RAWMAT_PRODUCER")
  @@index([RAWMAT_RAWTYP], map: "IDX_RAWMAT_RAWTYP")
}

model t_rawtyp {
  RAWTYP_RAWTYP Int     @id @default(autoincrement()) @db.UnsignedSmallInt
  RAWTYP_SHORT  String  @unique(map: "IDX_RAWTYP_SHORT") @db.VarChar(10)
  RAWTYP_DESC   String? @db.VarChar(50)
  RAWTYP_DELETED Boolean @default(false)
}

model t_silo {
  SILO_SILO     Int         @id @default(autoincrement())
  SILO_NAME     String
  SILO_QUANTITY Int
  SILO_CHARGE   Int         @db.UnsignedInt
  SILO_CAPACITY Decimal     @db.Decimal(6, 2)
  SILO_CATEGORY String
  rawcharge     t_rawcharge @relation(fields: [SILO_CHARGE], references: [RAWCHARGE_RAWCHARGE])

  @@index([SILO_CHARGE], map: "t_silo_SILO_CHARGE_fkey")
}

model t_bulk {
  BULK_BULK     Int         @id @default(autoincrement())
  BULK_NAME     String
  BULK_QUANTITY Int
  BULK_CHARGE   Int         @db.UnsignedInt
  BULK_CAPACITY Decimal     @db.Decimal(6, 2)
  BULK_CATEGORY String
  rawcharge     t_rawcharge @relation(fields: [BULK_CHARGE], references: [RAWCHARGE_RAWCHARGE])

  @@index([BULK_CHARGE], map: "t_bulk_BULK_CHARGE_fkey")
}

model t_mdatact {
  MDATACT_DATE     DateTime @db.DateTime(0)
  MDATACT_SYSTEM   Int
  MDATACT_VARIABLE Int
  MDATACT_VALUE    Decimal  @db.Decimal(10, 3)

  @@unique([MDATACT_SYSTEM, MDATACT_VARIABLE], map: "MDATACT_IDX_NUM")
}

// Nuevas tablas para el sistema de órdenes de producción

// Definición para mantener una versión de control por línea
model t_ng_line_version {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  line_id        Int       @unique @db.MediumInt
  last_updated   DateTime  @default(now()) @updatedAt
  version_hash   String    @db.VarChar(64)
}

// Definición de los estados de órdenes
enum OrderStatus {
  COMPLETED    @map("0") // Completado
  WAITING      @map("1") // En espera (siguiente)
  ACTIVE       @map("2") // En proceso (actual)
  PENDING      @map("3") // Pendiente (sin asignar)
  CANCELLED    @map("4") // Cancelada
}

// Tabla de Órdenes
model t_ng_orders {
  order_id           Int                   @id @default(autoincrement()) @db.UnsignedInt
  job_number         String                @db.VarChar(50)
  product_number     String                @db.VarChar(50)
  quantity_kg        Decimal               @db.Decimal(10, 2)
  consumption_kg_h   Decimal               @db.Decimal(8, 2)
  pml_target_g_m     Decimal               @db.Decimal(8, 2)
  width_mm           Int
  gusset_mm          Int
  linea_id           Int
  sequence_number    Int                   // Posición en la cola (1 = actual, 2 = siguiente, etc.)
  status             OrderStatus           // Mapeo del estado numérico al enum
  is_cancelled       Boolean               @default(false) // Flag adicional para cancelaciones
  created_at         DateTime              @default(now())
  updated_at_inno    DateTime              @updatedAt
  updated_at_ibed    DateTime?
  recipe_uuid        String?               @db.VarChar(36) // UUID de la receta como cadena

  // Relaciones
  components         t_ng_components[]     // Relación 1:N con componentes
  production_metrics t_ng_prod_metrics?    // Relación 1:1 con métricas de producción
  material_usage     t_ng_mat_cons[]       // Relación 1:N con consumo de materiales

  @@index([linea_id], map: "IDX_ORDERS_LINEA_ID")
  @@index([status], map: "IDX_ORDERS_STATUS")
  @@index([sequence_number], map: "IDX_ORDERS_SEQUENCE")
}

// Tabla de Componentes
model t_ng_components {
  component_id        Int      @id @default(autoincrement()) @db.UnsignedInt
  order_id            Int      @db.UnsignedInt
  material_code       String   @db.VarChar(100)
  percentage          Decimal  @db.Decimal(5, 2)
  gravimetric_position String   @db.Char(3)

  // Relación con la tabla de órdenes
  order               t_ng_orders @relation(fields: [order_id], references: [order_id], onDelete: Cascade)

  @@index([order_id], map: "IDX_COMPONENTS_ORDER_ID")
}

// Tabla de Métricas de Producción para órdenes completadas
model t_ng_prod_metrics {
  order_id         Int       @id @db.UnsignedInt
  time_start       DateTime  @db.DateTime(0)
  time_finish      DateTime  @db.DateTime(0)
  total_amount_kg  Decimal   @db.Decimal(10, 2)
  total_amount_m   Decimal   @db.Decimal(10, 2)
  average_kg_h     Decimal   @db.Decimal(10, 2)

  // Relación con la tabla de órdenes
  order            t_ng_orders @relation(fields: [order_id], references: [order_id], onDelete: Cascade)
}

// Tabla de Seguimiento de uso de Materiales por orden
model t_ng_mat_cons {
  id            Int      @id @default(autoincrement()) @db.UnsignedInt
  order_id      Int      @db.UnsignedInt
  material_code String   @db.VarChar(50)
  quantity_kg   Decimal  @db.Decimal(10, 2)

  // Relación con la tabla de órdenes
  order         t_ng_orders @relation(fields: [order_id], references: [order_id], onDelete: Cascade)

  @@index([order_id], map: "IDX_MAT_CONS_ORDER_ID")
  @@index([material_code], map: "IDX_MAT_CONS_MATERIAL")
}